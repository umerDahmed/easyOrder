{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { blogService } from \"./blogService\";\nexport const getAllBlogs = createAsyncThunk(\"blogs/get\", async thunkAPI => {\n  try {\n    return await blogService.getBlogs();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getABlog = createAsyncThunk(\"blog/get\", async (id, thunkAPI) => {\n  try {\n    return await blogService.getBlog(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst blogState = {\n  blog: \"\",\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const blogSlice = createSlice({\n  name: \"blog\",\n  initialState: blogState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getAllBlogs.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAllBlogs.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.blog = action.payload;\n    }).addCase(getAllBlogs.rejected, (state, action) => {\n      state.isError = true;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(getABlog.pending, state => {\n      state.isLoading = true;\n    }).addCase(getABlog.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.singleblog = action.payload;\n    }).addCase(getABlog.rejected, (state, action) => {\n      state.isError = true;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  }\n});\nexport default blogSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","toast","blogService","getAllBlogs","thunkAPI","getBlogs","error","rejectWithValue","getABlog","id","getBlog","blogState","blog","isError","isSuccess","isLoading","message","blogSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","singleblog","reducer"],"sources":["C:/Users/bond/Desktop/major project/EasyOrder/Frontend/src/features/blogs/blogSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport { blogService } from \"./blogService\";\r\n\r\nexport const getAllBlogs = createAsyncThunk(\"blogs/get\", async (thunkAPI) => {\r\n  try {\r\n    return await blogService.getBlogs();\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error);\r\n  }\r\n});\r\n\r\nexport const getABlog = createAsyncThunk(\"blog/get\", async (id, thunkAPI) => {\r\n  try {\r\n    return await blogService.getBlog(id);\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error);\r\n  }\r\n});\r\n\r\nconst blogState = {\r\n  blog: \"\",\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\nexport const blogSlice = createSlice({\r\n  name: \"blog\",\r\n  initialState: blogState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllBlogs.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAllBlogs.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.blog = action.payload;\r\n      })\r\n      .addCase(getAllBlogs.rejected, (state, action) => {\r\n        state.isError = true;\r\n        state.isLoading = false;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getABlog.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getABlog.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.singleblog = action.payload;\r\n      })\r\n      .addCase(getABlog.rejected, (state, action) => {\r\n        state.isError = true;\r\n        state.isLoading = false;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      });\r\n  },\r\n});\r\n\r\nexport default blogSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,eAAe;AAE3C,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,WAAW,EAAE,MAAOI,QAAQ,IAAK;EAC3E,IAAI;IACF,OAAO,MAAMF,WAAW,CAACG,QAAQ,CAAC,CAAC;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EACxC;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,QAAQ,GAAGR,gBAAgB,CAAC,UAAU,EAAE,OAAOS,EAAE,EAAEL,QAAQ,KAAK;EAC3E,IAAI;IACF,OAAO,MAAMF,WAAW,CAACQ,OAAO,CAACD,EAAE,CAAC;EACtC,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EACxC;AACF,CAAC,CAAC;AAEF,MAAMK,SAAS,GAAG;EAChBC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EACnCmB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAER,SAAS;EACvBS,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,WAAW,CAACqB,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACV,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDQ,OAAO,CAACpB,WAAW,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,SAAS,GAAG,IAAI;MACtBW,KAAK,CAACb,IAAI,GAAGe,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACpB,WAAW,CAAC0B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,OAAO,GAAGW,MAAM,CAACrB,KAAK;IAC9B,CAAC,CAAC,CACDiB,OAAO,CAACf,QAAQ,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACV,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDQ,OAAO,CAACf,QAAQ,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,SAAS,GAAG,IAAI;MACtBW,KAAK,CAACK,UAAU,GAAGH,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC,CACDL,OAAO,CAACf,QAAQ,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,OAAO,GAAGW,MAAM,CAACrB,KAAK;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeW,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}