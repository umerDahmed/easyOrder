{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { contactService } from \"./contactService\";\nexport const createQuery = createAsyncThunk(\"contact/post\", async (contactData, thunkAPI) => {\n  try {\n    return await contactService.postQuery(contactData);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst contactState = {\n  contact: \"\",\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const contactSlice = createSlice({\n  name: \"contact\",\n  initialState: contactState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createQuery.pending, state => {\n      state.isLoading = true;\n    }).addCase(createQuery.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.contact = action.payload;\n      if (state.isSuccess === true) {\n        toast.success(\"Contact Form Submitted Successfully\");\n      }\n    }).addCase(createQuery.rejected, (state, action) => {\n      state.isError = true;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = action.error;\n      if (state.isError === true) {\n        toast.error(\"Something Went Wrong\");\n      }\n    });\n  }\n});\nexport default contactSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","toast","contactService","createQuery","contactData","thunkAPI","postQuery","error","rejectWithValue","contactState","contact","isError","isSuccess","isLoading","message","contactSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","success","rejected","reducer"],"sources":["C:/Users/bond/Desktop/major project/EasyOrder/Frontend/src/features/contact/contactSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport { contactService } from \"./contactService\";\r\n\r\nexport const createQuery = createAsyncThunk(\r\n  \"contact/post\",\r\n  async (contactData, thunkAPI) => {\r\n    try {\r\n      return await contactService.postQuery(contactData);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst contactState = {\r\n  contact: \"\",\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\nexport const contactSlice = createSlice({\r\n  name: \"contact\",\r\n  initialState: contactState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createQuery.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createQuery.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.contact = action.payload;\r\n        if (state.isSuccess === true) {\r\n          toast.success(\"Contact Form Submitted Successfully\");\r\n        }\r\n      })\r\n      .addCase(createQuery.rejected, (state, action) => {\r\n        state.isError = true;\r\n        state.isLoading = false;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n        if (state.isError === true) {\r\n          toast.error(\"Something Went Wrong\");\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport default contactSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACzC,cAAc,EACd,OAAOI,WAAW,EAAEC,QAAQ,KAAK;EAC/B,IAAI;IACF,OAAO,MAAMH,cAAc,CAACI,SAAS,CAACF,WAAW,CAAC;EACpD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EACxC;AACF,CACF,CAAC;AAED,MAAME,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGhB,WAAW,CAAC;EACtCiB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAER,YAAY;EAC1BS,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,WAAW,CAACmB,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACV,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDQ,OAAO,CAAClB,WAAW,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,SAAS,GAAG,IAAI;MACtBW,KAAK,CAACb,OAAO,GAAGe,MAAM,CAACC,OAAO;MAC9B,IAAIH,KAAK,CAACX,SAAS,KAAK,IAAI,EAAE;QAC5BX,KAAK,CAAC0B,OAAO,CAAC,qCAAqC,CAAC;MACtD;IACF,CAAC,CAAC,CACDN,OAAO,CAAClB,WAAW,CAACyB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,OAAO,GAAGW,MAAM,CAAClB,KAAK;MAC5B,IAAIgB,KAAK,CAACZ,OAAO,KAAK,IAAI,EAAE;QAC1BV,KAAK,CAACM,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeQ,YAAY,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}