{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { getTextPoint } from '../util/util';\nimport CrosshairBase from './base';\nvar LineCrosshair = /** @class */function (_super) {\n  __extends(LineCrosshair, _super);\n  function LineCrosshair() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LineCrosshair.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'line',\n      locationType: 'region',\n      start: null,\n      end: null\n    });\n  };\n  // 直线的文本需要同直线垂直\n  LineCrosshair.prototype.getRotateAngle = function () {\n    var _a = this.getLocation(),\n      start = _a.start,\n      end = _a.end;\n    var position = this.get('text').position;\n    var angle = Math.atan2(end.y - start.y, end.x - start.x);\n    var tangentAngle = position === 'start' ? angle - Math.PI / 2 : angle + Math.PI / 2;\n    return tangentAngle;\n  };\n  LineCrosshair.prototype.getTextPoint = function () {\n    var _a = this.getLocation(),\n      start = _a.start,\n      end = _a.end;\n    var _b = this.get('text'),\n      position = _b.position,\n      offset = _b.offset;\n    return getTextPoint(start, end, position, offset);\n  };\n  LineCrosshair.prototype.getLinePath = function () {\n    var _a = this.getLocation(),\n      start = _a.start,\n      end = _a.end;\n    return [['M', start.x, start.y], ['L', end.x, end.y]];\n  };\n  return LineCrosshair;\n}(CrosshairBase);\nexport default LineCrosshair;","map":{"version":3,"names":["getTextPoint","CrosshairBase","LineCrosshair","_super","__extends","prototype","getDefaultCfg","cfg","call","__assign","type","locationType","start","end","getRotateAngle","_a","getLocation","position","get","angle","Math","atan2","y","x","tangentAngle","PI","_b","offset","getLinePath"],"sources":["C:\\Users\\bond\\Desktop\\major project\\EasyOrder\\Admin\\node_modules\\@antv\\component\\src\\crosshair\\line.ts"],"sourcesContent":["import { ILocation } from '../interfaces';\nimport { LineCrosshairCfg, Point, RegionLocationCfg } from '../types';\nimport { getTextPoint } from '../util/util';\nimport CrosshairBase from './base';\n\nclass LineCrosshair extends CrosshairBase<LineCrosshairCfg> implements ILocation<RegionLocationCfg> {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      type: 'line',\n      locationType: 'region',\n      start: null,\n      end: null,\n    };\n  }\n\n  // 直线的文本需要同直线垂直\n  protected getRotateAngle(): number {\n    const { start, end } = this.getLocation();\n    const { position } = this.get('text');\n    const angle = Math.atan2(end.y - start.y, end.x - start.x);\n    const tangentAngle = position === 'start' ? angle - Math.PI / 2 : angle + Math.PI / 2;\n    return tangentAngle;\n  }\n\n  protected getTextPoint() {\n    const { start, end } = this.getLocation();\n    const { position, offset } = this.get('text');\n    return getTextPoint(start, end, position, offset);\n  }\n\n  protected getLinePath(): any[] {\n    const { start, end } = this.getLocation();\n    return [\n      ['M', start.x, start.y],\n      ['L', end.x, end.y],\n    ];\n  }\n}\n\nexport default LineCrosshair;\n"],"mappings":";AAEA,SAASA,YAAY,QAAQ,cAAc;AAC3C,OAAOC,aAAa,MAAM,QAAQ;AAElC,IAAAC,aAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EAA5B,SAAAD,cAAA;;EAkCA;EAjCSA,aAAA,CAAAG,SAAA,CAAAC,aAAa,GAApB;IACE,IAAMC,GAAG,GAAGJ,MAAA,CAAAE,SAAA,CAAMC,aAAa,CAAAE,IAAA,MAAE;IACjC,OAAAC,QAAA,CAAAA,QAAA,KACKF,GAAG;MACNG,IAAI,EAAE,MAAM;MACZC,YAAY,EAAE,QAAQ;MACtBC,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE;IAAI;EAEb,CAAC;EAED;EACUX,aAAA,CAAAG,SAAA,CAAAS,cAAc,GAAxB;IACQ,IAAAC,EAAA,GAAiB,IAAI,CAACC,WAAW,EAAE;MAAjCJ,KAAK,GAAAG,EAAA,CAAAH,KAAA;MAAEC,GAAG,GAAAE,EAAA,CAAAF,GAAuB;IACjC,IAAAI,QAAQ,GAAK,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAAAD,QAArB;IAChB,IAAME,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACR,GAAG,CAACS,CAAC,GAAGV,KAAK,CAACU,CAAC,EAAET,GAAG,CAACU,CAAC,GAAGX,KAAK,CAACW,CAAC,CAAC;IAC1D,IAAMC,YAAY,GAAGP,QAAQ,KAAK,OAAO,GAAGE,KAAK,GAAGC,IAAI,CAACK,EAAE,GAAG,CAAC,GAAGN,KAAK,GAAGC,IAAI,CAACK,EAAE,GAAG,CAAC;IACrF,OAAOD,YAAY;EACrB,CAAC;EAEStB,aAAA,CAAAG,SAAA,CAAAL,YAAY,GAAtB;IACQ,IAAAe,EAAA,GAAiB,IAAI,CAACC,WAAW,EAAE;MAAjCJ,KAAK,GAAAG,EAAA,CAAAH,KAAA;MAAEC,GAAG,GAAAE,EAAA,CAAAF,GAAuB;IACnC,IAAAa,EAAA,GAAuB,IAAI,CAACR,GAAG,CAAC,MAAM,CAAC;MAArCD,QAAQ,GAAAS,EAAA,CAAAT,QAAA;MAAEU,MAAM,GAAAD,EAAA,CAAAC,MAAqB;IAC7C,OAAO3B,YAAY,CAACY,KAAK,EAAEC,GAAG,EAAEI,QAAQ,EAAEU,MAAM,CAAC;EACnD,CAAC;EAESzB,aAAA,CAAAG,SAAA,CAAAuB,WAAW,GAArB;IACQ,IAAAb,EAAA,GAAiB,IAAI,CAACC,WAAW,EAAE;MAAjCJ,KAAK,GAAAG,EAAA,CAAAH,KAAA;MAAEC,GAAG,GAAAE,EAAA,CAAAF,GAAuB;IACzC,OAAO,CACL,CAAC,GAAG,EAAED,KAAK,CAACW,CAAC,EAAEX,KAAK,CAACU,CAAC,CAAC,EACvB,CAAC,GAAG,EAAET,GAAG,CAACU,CAAC,EAAEV,GAAG,CAACS,CAAC,CAAC,CACpB;EACH,CAAC;EACH,OAAApB,aAAC;AAAD,CAAC,CAlC2BD,aAAa;AAoCzC,eAAeC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}