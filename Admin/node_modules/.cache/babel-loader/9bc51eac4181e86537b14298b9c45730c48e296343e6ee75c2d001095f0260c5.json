{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Attribute from './base';\nvar Shape = /** @class */function (_super) {\n  __extends(Shape, _super);\n  function Shape(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.type = 'shape';\n    _this.names = ['shape'];\n    return _this;\n  }\n  /**\n   * @override\n   */\n  Shape.prototype.getLinearValue = function (percent) {\n    var idx = Math.round((this.values.length - 1) * percent);\n    return this.values[idx];\n  };\n  return Shape;\n}(Attribute);\nexport default Shape;","map":{"version":3,"names":["Attribute","Shape","_super","__extends","cfg","_this","call","type","names","prototype","getLinearValue","percent","idx","Math","round","values","length"],"sources":["C:\\Users\\bond\\Desktop\\major project\\EasyOrder\\Admin\\node_modules\\@antv\\attr\\src\\attributes\\shape.ts"],"sourcesContent":["import { AttributeCfg } from '../interface';\nimport Attribute from './base';\n\nexport default class Shape extends Attribute {\n  constructor(cfg: AttributeCfg) {\n    super(cfg);\n    this.type = 'shape';\n    this.names = ['shape'];\n  }\n\n  /**\n   * @override\n   */\n  public getLinearValue(percent: number): string {\n    const idx = Math.round((this.values.length - 1) * percent);\n    return this.values[idx];\n  }\n}\n"],"mappings":";AACA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,IAAAC,KAAA,0BAAAC,MAAA;EAAmCC,SAAA,CAAAF,KAAA,EAAAC,MAAA;EACjC,SAAAD,MAAYG,GAAiB;IAA7B,IAAAC,KAAA,GACEH,MAAA,CAAAI,IAAA,OAAMF,GAAG,CAAC;IACVC,KAAI,CAACE,IAAI,GAAG,OAAO;IACnBF,KAAI,CAACG,KAAK,GAAG,CAAC,OAAO,CAAC;;EACxB;EAEA;;;EAGOP,KAAA,CAAAQ,SAAA,CAAAC,cAAc,GAArB,UAAsBC,OAAe;IACnC,IAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,IAAIL,OAAO,CAAC;IAC1D,OAAO,IAAI,CAACI,MAAM,CAACH,GAAG,CAAC;EACzB,CAAC;EACH,OAAAX,KAAC;AAAD,CAAC,CAdkCD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}