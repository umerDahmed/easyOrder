{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport customerService from \"./customerService\";\nexport const getUsers = createAsyncThunk(\"customer/get-customers\", async thunkAPI => {\n  try {\n    return await customerService.getUsers();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst initialState = {\n  customers: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const customerSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUsers.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.customers = action.payload;\n    }).addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  }\n});\nexport default customerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","customerService","getUsers","thunkAPI","error","rejectWithValue","initialState","customers","isError","isLoading","isSuccess","message","customerSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/bond/Desktop/major project/EasyOrder/Admin/src/features/cutomers/customerSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport customerService from \"./customerService\";\r\n\r\nexport const getUsers = createAsyncThunk(\r\n  \"customer/get-customers\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await customerService.getUsers();\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nconst initialState = {\r\n  customers: [],\r\n  isError: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\nexport const customerSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getUsers.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUsers.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.customers = action.payload;\r\n      })\r\n      .addCase(getUsers.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      });\r\n  },\r\n});\r\nexport default customerSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CACtC,wBAAwB,EACxB,MAAOG,QAAQ,IAAK;EAClB,IAAI;IACF,OAAO,MAAMF,eAAe,CAACC,QAAQ,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOD,QAAQ,CAACE,eAAe,CAACD,KAAK,CAAC;EACxC;AACF,CACF,CAAC;AACD,MAAME,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGb,WAAW,CAAC;EACvCc,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,QAAQ,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACV,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDQ,OAAO,CAACf,QAAQ,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACZ,SAAS,GAAGc,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDL,OAAO,CAACf,QAAQ,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,IAAI;MACpBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACjB,KAAK;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,eAAeQ,aAAa,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}