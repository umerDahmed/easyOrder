{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport enquiryService from \"./enquiryService\";\nexport const getEnquiries = createAsyncThunk(\"enquiry/get-enquiries\", async thunkAPI => {\n  try {\n    return await enquiryService.getEnquiries();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const deleteAEnquiry = createAsyncThunk(\"enquiry/delete-enquiry\", async (id, thunkAPI) => {\n  try {\n    return await enquiryService.deleteEnquiry(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getAEnquiry = createAsyncThunk(\"enquiry/get-enquiry\", async (id, thunkAPI) => {\n  try {\n    return await enquiryService.getEnquiry(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const updateAEnquiry = createAsyncThunk(\"enquiry/update-enquiry\", async (enq, thunkAPI) => {\n  try {\n    return await enquiryService.udpateEnquiry(enq);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const resetState = createAction(\"Reset_all\");\nconst initialState = {\n  enquiries: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const enquirySlice = createSlice({\n  name: \"enquiries\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getEnquiries.pending, state => {\n      state.isLoading = true;\n    }).addCase(getEnquiries.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.enquiries = action.payload;\n    }).addCase(getEnquiries.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(deleteAEnquiry.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteAEnquiry.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.deletedEnquiry = action.payload;\n    }).addCase(deleteAEnquiry.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(getAEnquiry.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAEnquiry.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.enqName = action.payload.name;\n      state.enqMobile = action.payload.mobile;\n      state.enqEmail = action.payload.email;\n      state.enqComment = action.payload.comment;\n      state.enqStatus = action.payload.status;\n    }).addCase(getAEnquiry.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(updateAEnquiry.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateAEnquiry.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.updatedEnquiry = action.payload;\n    }).addCase(updateAEnquiry.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(resetState, () => initialState);\n  }\n});\nexport default enquirySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","enquiryService","getEnquiries","thunkAPI","error","rejectWithValue","deleteAEnquiry","id","deleteEnquiry","getAEnquiry","getEnquiry","updateAEnquiry","enq","udpateEnquiry","resetState","initialState","enquiries","isError","isLoading","isSuccess","message","enquirySlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","deletedEnquiry","enqName","enqMobile","mobile","enqEmail","email","enqComment","comment","enqStatus","status","updatedEnquiry","reducer"],"sources":["C:/Users/bond/Desktop/major project/EasyOrder/Admin/src/features/enquiry/enquirySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport enquiryService from \"./enquiryService\";\r\n\r\nexport const getEnquiries = createAsyncThunk(\r\n  \"enquiry/get-enquiries\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await enquiryService.getEnquiries();\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteAEnquiry = createAsyncThunk(\r\n  \"enquiry/delete-enquiry\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await enquiryService.deleteEnquiry(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const getAEnquiry = createAsyncThunk(\r\n  \"enquiry/get-enquiry\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await enquiryService.getEnquiry(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateAEnquiry = createAsyncThunk(\r\n  \"enquiry/update-enquiry\",\r\n  async (enq, thunkAPI) => {\r\n    try {\r\n      return await enquiryService.udpateEnquiry(enq);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const resetState = createAction(\"Reset_all\");\r\n\r\nconst initialState = {\r\n  enquiries: [],\r\n  isError: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\nexport const enquirySlice = createSlice({\r\n  name: \"enquiries\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getEnquiries.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getEnquiries.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.enquiries = action.payload;\r\n      })\r\n      .addCase(getEnquiries.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(deleteAEnquiry.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteAEnquiry.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.deletedEnquiry = action.payload;\r\n      })\r\n      .addCase(deleteAEnquiry.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getAEnquiry.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAEnquiry.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.enqName = action.payload.name;\r\n        state.enqMobile = action.payload.mobile;\r\n        state.enqEmail = action.payload.email;\r\n        state.enqComment = action.payload.comment;\r\n        state.enqStatus = action.payload.status;\r\n      })\r\n      .addCase(getAEnquiry.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(updateAEnquiry.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateAEnquiry.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.updatedEnquiry = action.payload;\r\n      })\r\n      .addCase(updateAEnquiry.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(resetState, () => initialState);\r\n  },\r\n});\r\nexport default enquirySlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}