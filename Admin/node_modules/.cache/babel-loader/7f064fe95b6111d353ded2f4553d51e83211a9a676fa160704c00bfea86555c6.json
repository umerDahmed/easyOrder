{"ast":null,"code":"import { each, mix } from '@antv/util';\n// 获取多个状态量的合并值\nexport function getStatesStyle(item, elementName, stateStyles) {\n  var styleName = elementName + \"Style\"; // activeStyle\n  var styles = null;\n  each(stateStyles, function (v, state) {\n    if (item[state] && v[styleName]) {\n      if (!styles) {\n        styles = {};\n      }\n      mix(styles, v[styleName]); // 合并样式\n    }\n  });\n\n  return styles;\n}","map":{"version":3,"names":["each","mix","getStatesStyle","item","elementName","stateStyles","styleName","styles","v","state"],"sources":["C:\\Users\\bond\\Desktop\\major project\\EasyOrder\\Admin\\node_modules\\@antv\\component\\src\\util\\state.ts"],"sourcesContent":["import { each, mix } from '@antv/util';\nimport { ListItem } from '../types';\n\n// 获取多个状态量的合并值\nexport function getStatesStyle(item: ListItem, elementName: string, stateStyles: object) {\n  const styleName = `${elementName}Style`; // activeStyle\n  let styles = null;\n  each(stateStyles, (v, state) => {\n    if (item[state] && v[styleName]) {\n      if (!styles) {\n        styles = {};\n      }\n      mix(styles, v[styleName]); // 合并样式\n    }\n  });\n  return styles;\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,QAAQ,YAAY;AAGtC;AACA,OAAM,SAAUC,cAAcA,CAACC,IAAc,EAAEC,WAAmB,EAAEC,WAAmB;EACrF,IAAMC,SAAS,GAAMF,WAAW,UAAO,CAAC,CAAC;EACzC,IAAIG,MAAM,GAAG,IAAI;EACjBP,IAAI,CAACK,WAAW,EAAE,UAACG,CAAC,EAAEC,KAAK;IACzB,IAAIN,IAAI,CAACM,KAAK,CAAC,IAAID,CAAC,CAACF,SAAS,CAAC,EAAE;MAC/B,IAAI,CAACC,MAAM,EAAE;QACXA,MAAM,GAAG,EAAE;;MAEbN,GAAG,CAACM,MAAM,EAAEC,CAAC,CAACF,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE/B,CAAC,CAAC;;EACF,OAAOC,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}