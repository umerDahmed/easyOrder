{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bond\\\\Desktop\\\\major project\\\\EasyOrder\\\\Admin\\\\src\\\\pages\\\\Addblogcat.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect } from \"react\";\nimport CustomInput from \"../components/CustomInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { createNewblogCat, getABlogCat, resetState, updateABlogCat } from \"../features/bcategory/bcategorySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet schema = yup.object().shape({\n  title: yup.string().required(\"Category Name is Required\")\n});\nconst Addblogcat = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const getBlogCatId = location.pathname.split(\"/\")[3];\n  const newBlogCategory = useSelector(state => state.bCategory);\n  const {\n    isSuccess,\n    isError,\n    isLoading,\n    createBlogCategory,\n    blogCatName,\n    updatedBlogCategory\n  } = newBlogCategory;\n  useEffect(() => {\n    if (getBlogCatId !== undefined) {\n      dispatch(getABlogCat(getBlogCatId));\n    } else {\n      dispatch(resetState());\n    }\n  }, [getBlogCatId]);\n  useEffect(() => {\n    if (isSuccess && createBlogCategory) {\n      toast.success(\"Blog Category Added Successfullly!\");\n    }\n    if (isSuccess && updatedBlogCategory) {\n      toast.success(\"Blog Category Updated Successfullly!\");\n      navigate(\"/admin/blog-category-list\");\n    }\n    if (isError) {\n      toast.error(\"Something Went Wrong!\");\n    }\n  }, [isSuccess, isError, isLoading]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: blogCatName || \"\"\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      const data = {\n        id: getBlogCatId,\n        blogCatData: values\n      };\n      if (getBlogCatId !== undefined) {\n        dispatch(updateABlogCat(data));\n        dispatch(resetState());\n      } else {\n        dispatch(createNewblogCat(values));\n        formik.resetForm();\n        setTimeout(() => {\n          dispatch(resetState());\n        }, 300);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-4  title\",\n      children: [getBlogCatId !== undefined ? \"Edit\" : \"Add\", \" Blog Category\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"text\",\n          name: \"title\",\n          onChng: formik.handleChange(\"title\"),\n          onBlr: formik.handleBlur(\"title\"),\n          val: formik.values.title,\n          label: \"Enter Blog Category\",\n          id: \"blogcat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.touched.title && formik.errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success border-0 rounded-3 my-5\",\n          type: \"submit\",\n          children: [getBlogCatId !== undefined ? \"Edit\" : \"Add\", \" Blog Category\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Addblogcat, \"6ZALX1mI8VNabGH9AgQ++VRDQLo=\", false, function () {\n  return [useDispatch, useNavigate, useLocation, useSelector, useFormik];\n});\n_c = Addblogcat;\nexport default Addblogcat;\nvar _c;\n$RefreshReg$(_c, \"Addblogcat\");","map":{"version":3,"names":["React","useEffect","CustomInput","useDispatch","useSelector","useLocation","useNavigate","toast","yup","useFormik","createNewblogCat","getABlogCat","resetState","updateABlogCat","jsxDEV","_jsxDEV","schema","object","shape","title","string","required","Addblogcat","_s","dispatch","navigate","location","getBlogCatId","pathname","split","newBlogCategory","state","bCategory","isSuccess","isError","isLoading","createBlogCategory","blogCatName","updatedBlogCategory","undefined","success","error","formik","enableReinitialize","initialValues","validationSchema","onSubmit","values","data","id","blogCatData","resetForm","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","action","handleSubmit","type","name","onChng","handleChange","onBlr","handleBlur","val","label","touched","errors","_c","$RefreshReg$"],"sources":["C:/Users/bond/Desktop/major project/EasyOrder/Admin/src/pages/Addblogcat.js"],"sourcesContent":["import { React, useEffect } from \"react\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  createNewblogCat,\r\n  getABlogCat,\r\n  resetState,\r\n  updateABlogCat,\r\n} from \"../features/bcategory/bcategorySlice\";\r\nlet schema = yup.object().shape({\r\n  title: yup.string().required(\"Category Name is Required\"),\r\n});\r\nconst Addblogcat = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const getBlogCatId = location.pathname.split(\"/\")[3];\r\n  const newBlogCategory = useSelector((state) => state.bCategory);\r\n  const {\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    createBlogCategory,\r\n    blogCatName,\r\n    updatedBlogCategory,\r\n  } = newBlogCategory;\r\n  useEffect(() => {\r\n    if (getBlogCatId !== undefined) {\r\n      dispatch(getABlogCat(getBlogCatId));\r\n    } else {\r\n      dispatch(resetState());\r\n    }\r\n  }, [getBlogCatId]);\r\n  useEffect(() => {\r\n    if (isSuccess && createBlogCategory) {\r\n      toast.success(\"Blog Category Added Successfullly!\");\r\n    }\r\n    if (isSuccess && updatedBlogCategory) {\r\n      toast.success(\"Blog Category Updated Successfullly!\");\r\n      navigate(\"/admin/blog-category-list\");\r\n    }\r\n    if (isError) {\r\n      toast.error(\"Something Went Wrong!\");\r\n    }\r\n  }, [isSuccess, isError, isLoading]);\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      title: blogCatName || \"\",\r\n    },\r\n    validationSchema: schema,\r\n    onSubmit: (values) => {\r\n      const data = { id: getBlogCatId, blogCatData: values };\r\n      if (getBlogCatId !== undefined) {\r\n        dispatch(updateABlogCat(data));\r\n        dispatch(resetState());\r\n      } else {\r\n        dispatch(createNewblogCat(values));\r\n        formik.resetForm();\r\n        setTimeout(() => {\r\n          dispatch(resetState());\r\n        }, 300);\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <div>\r\n      <h3 className=\"mb-4  title\">\r\n        {getBlogCatId !== undefined ? \"Edit\" : \"Add\"} Blog Category\r\n      </h3>\r\n      <div>\r\n        <form action=\"\" onSubmit={formik.handleSubmit}>\r\n          <CustomInput\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChng={formik.handleChange(\"title\")}\r\n            onBlr={formik.handleBlur(\"title\")}\r\n            val={formik.values.title}\r\n            label=\"Enter Blog Category\"\r\n            id=\"blogcat\"\r\n          />\r\n          <div className=\"error\">\r\n            {formik.touched.title && formik.errors.title}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success border-0 rounded-3 my-5\"\r\n            type=\"submit\"\r\n          >\r\n            {getBlogCatId !== undefined ? \"Edit\" : \"Add\"} Blog Category\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addblogcat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}