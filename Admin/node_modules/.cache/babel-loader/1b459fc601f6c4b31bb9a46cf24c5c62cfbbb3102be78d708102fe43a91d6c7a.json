{"ast":null,"code":"import { __extends } from \"tslib\";\nimport EE from '@antv/event-emitter';\nimport { mix } from '../util/util';\nvar Base = /** @class */function (_super) {\n  __extends(Base, _super);\n  function Base(cfg) {\n    var _this = _super.call(this) || this;\n    /**\n     * 是否被销毁\n     * @type {boolean}\n     */\n    _this.destroyed = false;\n    var defaultCfg = _this.getDefaultCfg();\n    _this.cfg = mix(defaultCfg, cfg);\n    return _this;\n  }\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  Base.prototype.getDefaultCfg = function () {\n    return {};\n  };\n  // 实现接口的方法\n  Base.prototype.get = function (name) {\n    return this.cfg[name];\n  };\n  // 实现接口的方法\n  Base.prototype.set = function (name, value) {\n    this.cfg[name] = value;\n  };\n  // 实现接口的方法\n  Base.prototype.destroy = function () {\n    this.cfg = {\n      destroyed: true\n    };\n    this.off();\n    this.destroyed = true;\n  };\n  return Base;\n}(EE);\nexport default Base;","map":{"version":3,"names":["EE","mix","Base","_super","__extends","cfg","_this","call","destroyed","defaultCfg","getDefaultCfg","prototype","get","name","set","value","destroy","off"],"sources":["C:\\Users\\bond\\Desktop\\major project\\EasyOrder\\Admin\\node_modules\\@antv\\g-base\\src\\abstract\\base.ts"],"sourcesContent":["import EE from '@antv/event-emitter';\nimport { IBase } from '../interfaces';\nimport { mix } from '../util/util';\nimport { LooseObject } from '../types';\nabstract class Base extends EE implements IBase {\n  /**\n   * 内部属性，用于 get,set，但是可以用于优化性能使用\n   * @type {object}\n   */\n  cfg: LooseObject;\n\n  /**\n   * 是否被销毁\n   * @type {boolean}\n   */\n  destroyed: boolean = false;\n\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  getDefaultCfg() {\n    return {};\n  }\n\n  constructor(cfg) {\n    super();\n    const defaultCfg = this.getDefaultCfg();\n    this.cfg = mix(defaultCfg, cfg);\n  }\n\n  // 实现接口的方法\n  get(name) {\n    return this.cfg[name];\n  }\n  // 实现接口的方法\n  set(name, value) {\n    this.cfg[name] = value;\n  }\n\n  // 实现接口的方法\n  destroy() {\n    this.cfg = {\n      destroyed: true,\n    };\n    this.off();\n    this.destroyed = true;\n  }\n}\n\nexport default Base;\n"],"mappings":";AAAA,OAAOA,EAAE,MAAM,qBAAqB;AAEpC,SAASC,GAAG,QAAQ,cAAc;AAElC,IAAAC,IAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAsB1B,SAAAD,KAAYG,GAAG;IAAf,IAAAC,KAAA,GACEH,MAAA,CAAAI,IAAA,MAAO;IAhBT;;;;IAIAD,KAAA,CAAAE,SAAS,GAAY,KAAK;IAaxB,IAAMC,UAAU,GAAGH,KAAI,CAACI,aAAa,EAAE;IACvCJ,KAAI,CAACD,GAAG,GAAGJ,GAAG,CAACQ,UAAU,EAAEJ,GAAG,CAAC;;EACjC;EAbA;;;;;EAKAH,IAAA,CAAAS,SAAA,CAAAD,aAAa,GAAb;IACE,OAAO,EAAE;EACX,CAAC;EAQD;EACAR,IAAA,CAAAS,SAAA,CAAAC,GAAG,GAAH,UAAIC,IAAI;IACN,OAAO,IAAI,CAACR,GAAG,CAACQ,IAAI,CAAC;EACvB,CAAC;EACD;EACAX,IAAA,CAAAS,SAAA,CAAAG,GAAG,GAAH,UAAID,IAAI,EAAEE,KAAK;IACb,IAAI,CAACV,GAAG,CAACQ,IAAI,CAAC,GAAGE,KAAK;EACxB,CAAC;EAED;EACAb,IAAA,CAAAS,SAAA,CAAAK,OAAO,GAAP;IACE,IAAI,CAACX,GAAG,GAAG;MACTG,SAAS,EAAE;KACZ;IACD,IAAI,CAACS,GAAG,EAAE;IACV,IAAI,CAACT,SAAS,GAAG,IAAI;EACvB,CAAC;EACH,OAAAN,IAAC;AAAD,CAAC,CA7C2BF,EAAE;AA+C9B,eAAeE,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}